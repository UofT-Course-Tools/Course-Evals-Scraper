"""
This type stub file was generated by pyright.
"""

from selenium.webdriver.common import service
from typing import Any, Optional

class Service(service.Service):
    """Object that manages the starting and stopping of the
    GeckoDriver."""
    def __init__(self, executable_path, port=..., service_args: Optional[Any] = ..., log_path=..., env: Optional[Any] = ...):
        """Creates a new instance of the GeckoDriver remote service proxy.

        GeckoDriver provides a HTTP interface speaking the W3C WebDriver
        protocol to Marionette.

        :param executable_path: Path to the GeckoDriver binary.
        :param port: Run the remote service on a specified port.
            Defaults to 0, which binds to a random open port of the
            system's choosing.
        :param service_args: Optional list of arguments to pass to the
            GeckoDriver binary.
        :param log_path: Optional path for the GeckoDriver to log to.
            Defaults to _geckodriver.log_ in the current working directory.
        :param env: Optional dictionary of output variables to expose
            in the services' environment.

        """
        self.service_args = ...
    
    def command_line_args(self):
        ...
    
    def send_remote_shutdown_command(self):
        ...
    


