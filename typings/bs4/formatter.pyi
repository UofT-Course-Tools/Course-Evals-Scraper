"""
This type stub file was generated by pyright.
"""

from bs4.dammit import EntitySubstitution
from typing import Any, Optional

class Formatter(EntitySubstitution):
    """Describes a strategy to use when outputting a parse tree to a string.

    Some parts of this strategy come from the distinction between
    HTML4, HTML5, and XML. Others are configurable by the user.
    """
    XML_FORMATTERS = ...
    HTML_FORMATTERS = ...
    HTML = ...
    XML = ...
    HTML_DEFAULTS = ...
    def _default(self, language, value, kwarg):
        ...
    
    def __init__(self, language: Optional[Any] = ..., entity_substitution: Optional[Any] = ..., void_element_close_prefix=..., cdata_containing_tags: Optional[Any] = ...):
        """

        :param void_element_close_prefix: By default, represent void
        elements as <tag/> rather than <tag>
        """
        self.language = ...
        self.entity_substitution = ...
        self.void_element_close_prefix = ...
        self.cdata_containing_tags = ...
    
    def substitute(self, ns):
        """Process a string that needs to undergo entity substitution."""
        ...
    
    def attribute_value(self, value):
        """Process the value of an attribute."""
        ...
    
    def attributes(self, tag):
        """Reorder a tag's attributes however you want."""
        ...
    


class HTMLFormatter(Formatter):
    REGISTRY = ...
    def __init__(self, *args, **kwargs):
        ...
    


class XMLFormatter(Formatter):
    REGISTRY = ...
    def __init__(self, *args, **kwargs):
        ...
    


